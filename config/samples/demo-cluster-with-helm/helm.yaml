# Karpenter HelmChartProxy
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: karpenter
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: demo-cluster-with-helm
  repoURL: oci://public.ecr.aws/karpenter
  chartName: karpenter
  version: 1.0.8
  releaseName: karpenter
  namespace: karpenter
  options:
    waitForJobs: true
    atomic: true
    wait: true
    timeout: 5m
    install:
      createNamespace: true
  valuesTemplate: |
    {{- $outputs := .ControlPlane.status.workspaceStatus.atProvider.outputs -}}
    dnsPolicy: Default
    priorityClassName: system-cluster-critical
    settings:
      clusterName: {{ $outputs.cluster_name }}
      clusterEndpoint: {{ $outputs.cluster_endpoint }}
      interruptionQueue: {{ $outputs.karpenter.queue_name }}
      featureGates:
        spotToSpotConsolidation: true
    serviceAccount:
      annotations:
        "eks.amazonaws.com/role-arn": {{ index $outputs.karpenter.service_account.annotations "eks.amazonaws.com/role-arn" }}
    webhook:
      enabled: false
---
# Karpenter Default NodePool HelmChartProxy
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: karpenter-aws-default-nodepool
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: demo-cluster-with-helm
  repoURL: oci://ghcr.io/appthrust/charts
  chartName: karpenter-aws-default-nodepool
  version: 0.1.0
  releaseName: karpenter-nodepool
  namespace: karpenter
  dependsOn:
    - name: karpenter
      namespace: default
  options:
    waitForJobs: true
    atomic: true
    wait: true
    timeout: 5m
    install:
      createNamespace: true
  valuesTemplate: |
    {{- $outputs := .ControlPlane.status.workspaceStatus.atProvider.outputs -}}
    clusterName: {{ $outputs.cluster_name }}
    role: {{ $outputs.karpenter.ec2_node_class.role }}
    discoveryTags:
      key: {{ $outputs.karpenter.discovery_tag.key }}
      value: {{ $outputs.karpenter.discovery_tag.value }}
    limits:
      cpu: 1000
    requirements:
      - key: "karpenter.k8s.aws/instance-category"
        operator: In
        values: ["c", "m", "r", "g"]
      - key: "karpenter.k8s.aws/instance-hypervisor"
        operator: In
        values: ["nitro"]
      - key: "karpenter.k8s.aws/instance-generation"
        operator: Gt
        values: ["2"]
      - key: "kubernetes.io/arch"
        operator: In
        values: ["arm64"]
