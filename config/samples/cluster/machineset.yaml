apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CaptMachineSet
metadata:
  name: worker-machine-set
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      role: worker
  template:
    metadata:
      labels:
        role: worker
    spec:
      nodeGroupRef:
        name: managed-ng-1
        namespace: default
      workspaceTemplateRef:
        name: machine-template
        namespace: default
      instanceType: "t3.medium"
      labels:
        role: worker
      tags:
        Environment: "dev"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: WorkspaceTemplate
metadata:
  name: machine-template
  namespace: default
spec:
  template:
    spec:
      providerConfigRef:
        name: aws-provider
      forProvider:
        source: Inline
        module: |
          # Machine level configuration
          # This template focuses on individual machine settings

          variable "instance_type" {
            type = string
          }

          variable "node_group" {
            type = string
            description = "Reference to the node group this machine belongs to"
          }

          variable "labels" {
            type = map(string)
            default = {}
          }

          variable "tags" {
            type = map(string)
            default = {}
          }

          # Machine configuration
          # This will join the machine to the specified node group
          data "aws_eks_node_group" "target" {
            cluster_name    = var.cluster_name
            node_group_name = var.node_group
          }

          resource "aws_instance" "machine" {
            instance_type = var.instance_type
            subnet_id     = data.aws_eks_node_group.target.subnet_ids[0]

            # Use the node group's security groups and IAM role
            vpc_security_group_ids = data.aws_eks_node_group.target.security_groups
            iam_instance_profile   = data.aws_eks_node_group.target.node_role

            tags = merge(var.tags, {
              Name = "${var.node_group}-machine"
              Role = "worker"
            })

            user_data = base64encode(<<-EOF
              #!/bin/bash
              /etc/eks/bootstrap.sh ${var.cluster_name} \
                --node-labels ${join(",", [for k, v in var.labels : "${k}=${v}"])} \
                --kubelet-extra-args "--node-labels=${join(",", [for k, v in var.labels : "${k}=${v}"])}"
              EOF
            )
          }

          # Output the instance details
          output "instance_id" {
            value = aws_instance.machine.id
          }

          output "private_ip" {
            value = aws_instance.machine.private_ip
          }
